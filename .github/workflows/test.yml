name: test

on: [pull_request, push]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres_main:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: user_manager
        ports:
          - 5432:5432

      redis_main:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: '1.5.1'
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Set up environment variables
        run: cp .env.test .env

      - name: Create test database
        run: createdb ${{ env.TEST_DB_NAME }}

      - name: Run tests
        env:
          PORT: ${{ env.PORT }}
          DB_NAME: ${{ env.TEST_DB_NAME }}
          TEST_REDIS_URL: ${{ job.services.redis.ports[6379] }}/2?decode_responses=True
        run: poetry run pytest
