"""from column to mapped

Revision ID: 1a9a16ea419c
Revises: adc6780bbde7
Create Date: 2023-11-26 21:46:08.843513

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1a9a16ea419c"
down_revision: Union[str, None] = "adc6780bbde7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user",
        "role",
        existing_type=postgresql.ENUM("user", "admin", "moderator", name="userrole"),
        nullable=False,
    )
    op.alter_column("user", "is_blocked", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("user", "group_id", existing_type=sa.INTEGER(), nullable=False)
    op.create_unique_constraint(None, "user", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user", type_="unique")
    op.alter_column("user", "group_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("user", "is_blocked", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "user",
        "role",
        existing_type=postgresql.ENUM("user", "admin", "moderator", name="userrole"),
        nullable=True,
    )
    # ### end Alembic commands ###
